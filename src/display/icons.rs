use crate::models::WeatherConditionIcon;

pub type Icon = [&'static str; 7];

impl WeatherConditionIcon {
    pub fn icon(self) -> Icon {
        match self {
            Self::Unknown => [
                "             ",
                "    .-.      ",
                "     __)     ",
                "    (        ",
                "     `-’     ",
                "      •      ",
                "             ",
            ],
            Self::Sunny => [
                "             ",
                "    \\   /    ",
                "     .-.     ",
                "  ― (   ) ―  ",
                "     `-’     ",
                "    /   \\    ",
                "             ",
            ],
            Self::PartlyCloudy => [
                "             ",
                "   \\  /      ",
                " _ /\"\".-.    ",
                "   \\_(   ).  ",
                "   /(___(__) ",
                "             ",
                "             ",
            ],
            Self::Cloudy => [
                "             ",
                "             ",
                "     .--.    ",
                "  .-(    ).  ",
                " (___.__)__) ",
                "             ",
                "             ",
            ],
            Self::LightShowers => [
                "             ",
                " _`/\"\".-.    ",
                "  ,\\_(   ).  ",
                "   /(___(__) ",
                "     ' ' ' ' ",
                "    ' ' ' '  ",
                "             ",
            ],
            Self::HeavyShowers => [
                "             ",
                " _`/\"\".-.    ",
                "  ,\\_(   ).  ",
                "   /(___(__) ",
                "   ‚'‚'‚'‚'  ",
                "   ‚'‚'‚'‚'  ",
                "             ",
            ],
            Self::LightSnow => [
                "             ",
                "     .-.     ",
                "    (   ).   ",
                "   (___(__)  ",
                "    *  *  *  ",
                "   *  *  *   ",
                "             ",
            ],
            Self::HeavySnow => [
                "             ",
                "     .-.     ",
                "    (   ).   ",
                "   (___(__)  ",
                "   * * * *   ",
                "  * * * *    ",
                "             ",
            ],
            Self::Thunderstorm => [
                "             ",
                "     .-.     ",
                "    (   ).   ",
                "   (___(__)  ",
                "   ⚡\"\"⚡\"\"  ",
                "  ‚'‚'‚'‚'   ",
                "             ",
            ],
            Self::Fog => [
                "             ",
                "             ",
                " _ - _ - _ - ",
                "  _ - _ - _  ",
                " _ - _ - _ - ",
                "             ",
                "             ",
            ],
        }
    }

    pub fn colored_icon(self) -> Icon {
        match self {
            Self::Unknown => [
                "             ",
                "    .-.      ",
                "     __)     ",
                "    (        ",
                "     `-’     ",
                "      •      ",
                "             ",
            ],
            Self::Sunny => [
                "             ",
                "\x1b[38;5;226m    \\   /    \x1b[0m",
                "\x1b[38;5;226m     .-.     \x1b[0m",
                "\x1b[38;5;226m  ― (   ) ―  \x1b[0m",
                "\x1b[38;5;226m     `-’     \x1b[0m",
                "\x1b[38;5;226m    /   \\    \x1b[0m",
                "             ",
            ],
            Self::PartlyCloudy => [
                "             ",
                "\x1b[38;5;226m   \\  /\x1b[0m      ",
                "\x1b[38;5;226m _ /\"\"\x1b[38;5;250m.-.    \x1b[0m",
                "\x1b[38;5;226m   \\_\x1b[38;5;250m(   ).  \x1b[0m",
                "\x1b[38;5;226m   /\x1b[38;5;250m(___(__) \x1b[0m",
                "             ",
                "             ",
            ],
            Self::Cloudy => [
                "             ",
                "             ",
                "\x1b[38;5;250m     .--.    \x1b[0m",
                "\x1b[38;5;250m  .-(    ).  \x1b[0m",
                "\x1b[38;5;250m (___.__)__) \x1b[0m",
                "             ",
                "             ",
            ],
            Self::LightShowers => [
                "             ",
                "\x1b[38;5;226m _`/\"\"\x1b[38;5;250m.-.    \x1b[0m",
                "\x1b[38;5;226m  ,\\_\x1b[38;5;250m(   ).  \x1b[0m",
                "\x1b[38;5;226m   /\x1b[38;5;250m(___(__) \x1b[0m",
                "\x1b[38;5;111m     ' ' ' ' \x1b[0m",
                "\x1b[38;5;111m    ' ' ' '  \x1b[0m",
                "             ",
            ],
            Self::HeavyShowers => [
                "             ",
                "\x1b[38;5;226m _`/\"\"\x1b[38;5;240;1m.-.    \x1b[0m",
                "\x1b[38;5;226m  ,\\_\x1b[38;5;240;1m(   ).  \x1b[0m",
                "\x1b[38;5;226m   /\x1b[38;5;240;1m(___(__) \x1b[0m",
                "\x1b[38;5;21;1m   ‚'‚'‚'‚'  \x1b[0m",
                "\x1b[38;5;21;1m   ‚'‚'‚'‚'  \x1b[0m",
                "             ",
            ],
            Self::LightSnow => [
                "             ",
                "\x1b[38;5;250m     .-.     \x1b[0m",
                "\x1b[38;5;250m    (   ).   \x1b[0m",
                "\x1b[38;5;250m   (___(__)  \x1b[0m",
                "\x1b[38;5;255m    *  *  *  \x1b[0m",
                "\x1b[38;5;255m   *  *  *   \x1b[0m",
                "             ",
            ],
            Self::HeavySnow => [
                "             ",
                "\x1b[38;5;240;1m     .-.     \x1b[0m",
                "\x1b[38;5;240;1m    (   ).   \x1b[0m",
                "\x1b[38;5;240;1m   (___(__)  \x1b[0m",
                "\x1b[38;5;255;1m   * * * *   \x1b[0m",
                "\x1b[38;5;255;1m  * * * *    \x1b[0m",
                "             ",
            ],
            Self::Thunderstorm => [
                "             ",
                "\x1b[38;5;240;1m     .-.     \x1b[0m",
                "\x1b[38;5;240;1m    (   ).   \x1b[0m",
                "\x1b[38;5;240;1m   (___(__)  \x1b[0m",
                "\x1b[38;5;228;5m   ⚡\x1b[38;5;111;25m\"\"\x1b[38;5;228;5m⚡\x1b[38;5;111;25m\"\"  \x1b[0m",
                "\x1b[38;5;21;1m  ‚'‚'‚'‚'   \x1b[0m",
                "             ",
            ],
            Self::Fog => [
                "             ",
                "             ",
                "\x1b[38;5;251m _ - _ - _ - \x1b[0m",
                "\x1b[38;5;251m  _ - _ - _  \x1b[0m",
                "\x1b[38;5;251m _ - _ - _ - \x1b[0m",
                "             ",
                "             ",
            ],
        }
    }

    pub fn emoji(self) -> &'static str {
        match self {
            WeatherConditionIcon::Unknown => "❓",
            WeatherConditionIcon::Sunny => "☀️ ",
            WeatherConditionIcon::PartlyCloudy => "⛅️",
            WeatherConditionIcon::Cloudy => "☁️ ",
            WeatherConditionIcon::LightShowers => "🌦️ ",
            WeatherConditionIcon::HeavyShowers => "🌧️ ",
            WeatherConditionIcon::LightSnow => "🌨️ ",
            WeatherConditionIcon::HeavySnow => "❄️ ",
            WeatherConditionIcon::Thunderstorm => "⛈️ ",
            WeatherConditionIcon::Fog => "🌫 ",
        }
    }
}
